//
//  TopicViewController.m
//  shiyan
//
//  Created by lanouhn on 15/6/27.
//  Copyright (c) 2015年 lanouhn. All rights reserved.
//

#import "TopicViewController.h"
#import "TopicViewCell.h"
#import "TopicQuestionViewCell.h"
#import "TopicModel.h"
#import "NetWorkRequest.h"
#import "RefreshTableViewCell.h"

@interface TopicViewController ()<NetWorkRequestDelegate>
@property(nonatomic,retain)NSMutableArray *dataArr;
@property(nonatomic,retain)NSMutableArray *QuestionArr;
@property (nonatomic)NSInteger loadCount;//加载的次数
@property (nonatomic, retain)UIRefreshControl *refresh;//创建刷新控件

@end

@implementation TopicViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    
    
    // Uncomment the following line to preserve selection between presentations.
    // self.clearsSelectionOnViewWillAppear = NO;
    
    // Uncomment the following line to display an Edit button in the navigation bar for this view controller.
    // self.navigationItem.rightBarButtonItem = self.editButtonItem;
    
    NetWorkRequest *request = [[NetWorkRequest alloc]init];
    [request startNetWorkRequestWithURL:@"http://www.duitang.com/napi/topic/detail/?__dtac=%257B%257D&topic_id=2977" method:nil parameters:nil kind:2 orContainChinese:NO];
    
    NetWorkRequest *request1 = [[NetWorkRequest alloc]init];
    NSRange range = [self.target rangeOfString:@"topic_id="];
    NSString *url1 = [self.target substringFromIndex:range.location + range.length];
    [request1 startNetWorkRequestWithURL:[@"http://www.duitang.com/napi/topic/comment/list/?__dtac=%257B%257D&start=0&topic_id=" stringByAppendingString:url1]method:nil parameters:nil kind:0 orContainChinese:NO];
    request.delegate = self;
    request1.delegate = self;
    [self.tableView registerClass:[TopicViewCell class] forCellReuseIdentifier:@"cell"];
    [self.tableView registerClass:[TopicQuestionViewCell class] forCellReuseIdentifier:@"question"];
    [self.tableView registerClass:[RefreshTableViewCell class] forCellReuseIdentifier:@"refresh"];
    //刷新
    self.refresh = [[UIRefreshControl alloc]init];
    self.refresh.attributedTitle = [[NSAttributedString alloc] initWithString:@"加载中"];
    
    //为刷新控件添加事件
    [self.refresh addTarget:self action:@selector(refreshAction:) forControlEvents:UIControlEventValueChanged];
    
    [self.tableView addSubview:self.refresh];
    [self.refresh release];
    
}
- (void)refreshAction:(UIRefreshControl *)refresh {
    
    //执行网络数据请求
    NetWorkRequest *request = [[NetWorkRequest alloc]init];
    //开始进行网络数据请求
    NSRange range = [self.target rangeOfString:@"topic_id="];
    NSString *url1 = [self.target substringFromIndex:range.location + range.length];
    [request startNetWorkRequestWithURL:[@"http://www.duitang.com/napi/topic/comment/list/?__dtac=%257B%257D&start=0&topic_id=" stringByAppendingString:url1]method:nil parameters:nil kind:0 orContainChinese:NO];
    
    //设置代理
    request.delegate = self;
    [request release];
}

#pragma mark - NetWorkRequestDelegate
- (void)getDataSuccessWithObject:(id)object kind:(NSInteger)kind {
    
    if (kind == 0) {
        
        [self.refresh endRefreshing];
        [self.dataArr removeAllObjects];
        }
    
    if (kind == 0 || kind == 1) {
        NSArray *arr = object[@"data"][@"object_list"];
        for (NSDictionary *dic in arr) {
            TopicModel *model = [TopicModel createModelWithDic:dic];
            [self.dataArr addObject:model];
        }
    }else if (kind == 2) {
        NSDictionary *dictiongary = object[@"data"];
        TopicModel *model = [TopicModel createModelWithDic:dictiongary];
        [self.QuestionArr addObject:model];
    }
    [self.tableView reloadData];
}

- (void)getDataFail {
    
    UIAlertView *alertV = [[UIAlertView alloc] initWithTitle:@"提示" message:@"请检查当前网络是否连接" delegate:nil cancelButtonTitle:nil otherButtonTitles:@"确定", nil];
    [alertV show];
    [alertV release];
}
- (NSMutableArray *)dataArr {
    
    if (!_dataArr) {
        self.dataArr = [NSMutableArray arrayWithCapacity:0];
    }
    return [[_dataArr retain] autorelease];
}

- (NSMutableArray *)QuestionArr {

    if (!_QuestionArr) {
        self.QuestionArr = [NSMutableArray arrayWithCapacity:0];
    }
    return [[_QuestionArr retain] autorelease];
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - Table view data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {

    return 2;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {

    return section == 0 ? 1 : self.dataArr.count + 1;
}


- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    if (indexPath.section == 0) {
        TopicQuestionViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"question" forIndexPath:indexPath];
        if (self.QuestionArr.count != 0) {
            cell.model = [self.QuestionArr firstObject];
        }
        
        return cell;
        
    }else {
        if (indexPath.row < self.dataArr.count) {
        TopicViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"cell" forIndexPath:indexPath];
        cell.model = self.dataArr[indexPath.row];
        return cell;
            
        }else {
            
            RefreshTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"refresh" forIndexPath:indexPath];
            return cell;
        }
    }
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {

    if (indexPath.section == 1) {
        if (indexPath.row < self.dataArr.count) {
        TopicModel *model = self.dataArr[indexPath.row];
        CGRect rect = [model.content boundingRectWithSize:CGSizeMake(260, 100000) options:NSStringDrawingUsesLineFragmentOrigin attributes:@{NSFontAttributeName:[UIFont systemFontOfSize:15]} context:nil];
            return rect.size.height + 75;
        }
    }else {
    
        TopicModel *model = [self.QuestionArr firstObject];
        CGRect rect = [model.content boundingRectWithSize:CGSizeMake(260, 100000) options:NSStringDrawingUsesLineFragmentOrigin attributes:@{NSFontAttributeName:[UIFont systemFontOfSize:15]} context:nil];

        return rect.size.height + 95;
    }
    return 0;
}

- (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath {
    if (indexPath.section == 1) {
        if (indexPath.row == self.dataArr.count) {
            RefreshTableViewCell *refreshCell = (RefreshTableViewCell *)cell;
            [refreshCell.activityIndicator startAnimating];
            
            //执行网络请求
            NetWorkRequest *request = [[NetWorkRequest alloc]init];
            
            self.loadCount = self.loadCount + 25;
            
            NSRange range = [self.target rangeOfString:@"topic_id="];
            NSString *targetid = [self.target substringFromIndex:range.location + range.length];
            
            
            NSString *url1 = @"http://www.duitang.com/napi/topic/comment/list/?__dtac=%257B%257D&";
            NSString *url2 = [NSString stringWithFormat:@"start=%ld&topic_id=%@",(long)self.loadCount,targetid];
            NSString *url = [url1 stringByAppendingString:url2];
            
            //开始进行网络数据请求(kind来判断当前操作是加载还是刷新，0代表刷新，1代表加载)
            [request startNetWorkRequestWithURL:url method:nil parameters:nil kind:1 orContainChinese:NO];
            request.delegate = self;
            [request release];
        }

    }
}

- (NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section {

    if (section == 1) {
        return @"热门评论";
    }
    return nil;
}
/*
// Override to support conditional editing of the table view.
- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath {
    // Return NO if you do not want the specified item to be editable.
    return YES;
}
*/

/*
// Override to support editing the table view.
- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath {
    if (editingStyle == UITableViewCellEditingStyleDelete) {
        // Delete the row from the data source
        [tableView deleteRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationFade];
    } else if (editingStyle == UITableViewCellEditingStyleInsert) {
        // Create a new instance of the appropriate class, insert it into the array, and add a new row to the table view
    }   
}
*/

/*
// Override to support rearranging the table view.
- (void)tableView:(UITableView *)tableView moveRowAtIndexPath:(NSIndexPath *)fromIndexPath toIndexPath:(NSIndexPath *)toIndexPath {
}
*/

/*
// Override to support conditional rearranging of the table view.
- (BOOL)tableView:(UITableView *)tableView canMoveRowAtIndexPath:(NSIndexPath *)indexPath {
    // Return NO if you do not want the item to be re-orderable.
    return YES;
}
*/

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
